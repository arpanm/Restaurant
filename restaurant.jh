
entity PincodeMaster {
	pincode String
    area String
	city String
	stateProvince String
    country String
}


entity Location {
	saveAs String
    gst String
    pan String
	email String
    phone String
	streetAddress String
	postalCode String
    area String
	city String
	stateProvince String
    country String
    latitude Double
    longitude Double
}

entity ApplicationUser {
	name String
    password String
    email String
    phone String
    role UserRole
    isPhoneValidated Boolean
    isEmailValidated Boolean
    phoneValidatedOn Instant
    emailValidatedOn Instant
}

enum UserRole {
	Customer,
    RestaurantAdmin,
    SuperAdmin
}

entity Otp {
	email String
    phone String
    otp Integer
    isActive Boolean
    isValidated Boolean
    expiry Instant
}

relationship OneToMany {
	ApplicationUser{addresses} to Location{usr}
}

relationship OneToMany {
	ApplicationUser to Otp{usr}
}


entity Restaurant {
	restaurantName String
    title String
    logo String
    type RestaurantType
}


enum RestaurantType {
   MultiCusion, CloudKitchen
}

relationship OneToOne {
	Restaurant{location} to Location
}

relationship OneToMany {
	Restaurant{admins} to ApplicationUser{restaurant}
}

entity Banner {
    title String
    imageUrl String
    bannerLink String
    description String
    startDate Instant
    endDate Instant
    isActive Boolean
}

entity FoodCategory {
	catName String
	description String
    imageUrl String
}

entity Price {
	mrp Double,
    price Double,
    discountPercentage Double
}

entity QtyUnit {
	unitName String
}

entity Quantity {
	quantity Double
    minQuantity Double
}

relationship OneToOne {
	Quantity{qtyUnit} to QtyUnit
}

entity Nutrition {
	nutritionValue Double
    nutriType NutritionType
}

enum NutritionType {
   Calory,
   Fat,
   Protein,
   Carbs
}

entity IngredienceMaster {
	ingredience String
}

entity Item {
	itemName String
    imageUrl String
    properties Long
    foodType FoodType
}

enum FoodType {
   Veg,
   NonVeg,
   Vegan
}

relationship OneToMany {
	FoodCategory to Item{category}
}

relationship ManyToMany {
	Item{ingredience} to IngredienceMaster{items}
}

relationship OneToOne {
	Item{nutrition} to Nutrition
    Item{price} to Price
    Item{quantity} to Quantity
}


entity WeightInfo {
	currentWeight Double
    expectedWeight Double
    heightInInch Double
    numberOfDays Integer
}

entity CalorieInfo {
	dailyCalorieLimit Double 
}

entity MealPlanSettings {
	dietType DietType
    foodType FoodType
}

enum DietType {
	Keto, IntermittentFasting, LowCarb, LowFat, Blend
}

entity Avoid {
	avoidIngredience String
}

relationship ManyToMany {
	MealPlanSettings{avoidList} to Avoid{mealPlanSettings}
}

relationship OneToOne {
	MealPlanSettings{weightInfo} to WeightInfo
    MealPlanSettings{calorieInfo} to CalorieInfo
}

entity MealPlan {
    startDate Instant
    endDate Instant
    planName String
}

relationship OneToMany {
	MealPlanSettings{plans} to MealPlan{mealPlanSetting}
}
relationship OneToMany {
	ApplicationUser{mealPlan} to MealPlan{usr}
}

entity MealPlanItem {
	planItemName String // Name will be break fast, lunch dinner etc
    hourValue Integer
    pincode String
}

relationship ManyToMany {
	MealPlanItem{items} to Item{mealPlanItems}
}

relationship OneToMany {
	MealPlan{meals} to MealPlanItem{plan}
}

relationship OneToOne {
	MealPlanItem{deliveryLocation} to Location
}

entity SkipDate {
	skipDate LocalDate
}

relationship OneToMany {
	MealPlanItem{skipDates} to SkipDate{mealPlanItem}
}


enum DiscountSlab {
	OneDay,
    SevenDay,
    ThirtyDay,
    More
}

entity Discount {
	discount Double
    slab DiscountSlab
}

relationship OneToOne {
	MealPlan{discount} to Discount
}

entity CartItem {
	quantity Integer
}

entity Cart {
	status String
}

relationship OneToMany {
	Cart{items} to CartItem{cart}
}

relationship OneToMany {
	ApplicationUser{cart} to Cart{usr}
}

relationship OneToOne {
	CartItem{item} to Item
}

relationship OneToOne {
	CartItem{meal} to MealPlan
}

application {
  config {
    baseName Restaurant
    applicationType monolith
    serverPort 9001
    devDatabaseType mysql
    prodDatabaseType mysql
    clientFramework react
    clientPackageManager npm
    authenticationType jwt
    buildTool maven
    enableSwaggerCodegen true
    packageName com.restaurant.angikar
  }
  entities *
  dto * with mapstruct
  paginate * with infinite-scroll
  service all with serviceImpl
}